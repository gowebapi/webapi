// Code generated by webidl-bind. DO NOT EDIT.

package storage

import "syscall/js"

import (
	"github.com/gowebapi/webapi/javascript"
)

// using following types:
// javascript.Promise

// ReleasableApiResource is used to release underlaying
// allocated resources.
type ReleasableApiResource interface {
	Release()
}

type releasableApiResourceList []ReleasableApiResource

func (a releasableApiResourceList) Release() {
	for _, v := range a {
		v.Release()
	}
}

// workaround for compiler error
func unused(value interface{}) {
	// TODO remove this method
}

type Union struct {
	Value js.Value
}

func (u *Union) JSValue() js.Value {
	return u.Value
}

func UnionFromJS(value js.Value) *Union {
	return &Union{Value: value}
}

// dictionary: StorageEstimate
type StorageEstimate struct {
	Usage int
	Quota int
}

// JSValue is allocating a new javasript object and copy
// all values
func (_this *StorageEstimate) JSValue() js.Value {
	out := js.Global().Get("Object").New()
	value0 := _this.Usage
	out.Set("usage", value0)
	value1 := _this.Quota
	out.Set("quota", value1)
	return out
}

// StorageEstimateFromJS is allocating a new
// StorageEstimate object and copy all values from
// input javascript object
func StorageEstimateFromJS(value js.Wrapper) *StorageEstimate {
	input := value.JSValue()
	var out StorageEstimate
	var (
		value0 int // javascript: unsigned long long {usage Usage usage}
		value1 int // javascript: unsigned long long {quota Quota quota}
	)
	value0 = (input.Get("usage")).Int()
	out.Usage = value0
	value1 = (input.Get("quota")).Int()
	out.Quota = value1
	return &out
}

// interface: StorageManager
type StorageManager struct {
	// Value_JS holds a reference to a javascript value
	Value_JS js.Value
}

func (_this *StorageManager) JSValue() js.Value {
	return _this.Value_JS
}

// StorageManagerFromJS is casting a js.Wrapper into StorageManager.
func StorageManagerFromJS(value js.Wrapper) *StorageManager {
	input := value.JSValue()
	if input.Type() == js.TypeNull {
		return nil
	}
	ret := &StorageManager{}
	ret.Value_JS = input
	return ret
}

func (_this *StorageManager) Persisted() (_result *javascript.Promise) {
	var (
		_args [0]interface{}
		_end  int
	)
	_returned := _this.Value_JS.Call("persisted", _args[0:_end]...)
	var (
		_converted *javascript.Promise // javascript: Promise _what_return_name
	)
	_converted = javascript.PromiseFromJS(_returned)
	_result = _converted
	return
}

func (_this *StorageManager) Persist() (_result *javascript.Promise) {
	var (
		_args [0]interface{}
		_end  int
	)
	_returned := _this.Value_JS.Call("persist", _args[0:_end]...)
	var (
		_converted *javascript.Promise // javascript: Promise _what_return_name
	)
	_converted = javascript.PromiseFromJS(_returned)
	_result = _converted
	return
}

func (_this *StorageManager) Estimate() (_result *javascript.Promise) {
	var (
		_args [0]interface{}
		_end  int
	)
	_returned := _this.Value_JS.Call("estimate", _args[0:_end]...)
	var (
		_converted *javascript.Promise // javascript: Promise _what_return_name
	)
	_converted = javascript.PromiseFromJS(_returned)
	_result = _converted
	return
}
