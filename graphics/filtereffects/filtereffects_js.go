// Code generated by webidl-bind. DO NOT EDIT.

package filtereffects

import "syscall/js"

import (
	"github.com/gowebapi/webapi/core"
	"github.com/gowebapi/webapi/graphics/svg"
)

// using following types:
// svg.SVGAnimatedBoolean
// svg.SVGAnimatedEnumeration
// svg.SVGAnimatedInteger
// svg.SVGAnimatedLength
// svg.SVGAnimatedNumber
// svg.SVGAnimatedNumberList
// svg.SVGAnimatedPreserveAspectRatio
// svg.SVGAnimatedString
// svg.SVGElement

// source idl files:
// filter-effects.idl

// transform files:
// filter-effects.go.md

// workaround for compiler error
func unused(value interface{}) {
	// TODO remove this method
}

type Union struct {
	Value js.Value
}

func (u *Union) JSValue() js.Value {
	return u.Value
}

func UnionFromJS(value js.Value) *Union {
	return &Union{Value: value}
}

// class: SVGComponentTransferFunctionElement
type SVGComponentTransferFunctionElement struct {
	svg.SVGElement
}

// SVGComponentTransferFunctionElementFromJS is casting a js.Value into SVGComponentTransferFunctionElement.
func SVGComponentTransferFunctionElementFromJS(value js.Value) *SVGComponentTransferFunctionElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGComponentTransferFunctionElement{}
	ret.Value_JS = value
	return ret
}

// SVGComponentTransferFunctionElementFromJS is casting from something that holds a js.Value into SVGComponentTransferFunctionElement.
func SVGComponentTransferFunctionElementFromWrapper(input core.Wrapper) *SVGComponentTransferFunctionElement {
	return SVGComponentTransferFunctionElementFromJS(input.JSValue())
}

const (
	SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN  int = 0
	SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY int = 1
	SVG_FECOMPONENTTRANSFER_TYPE_TABLE    int = 2
	SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE int = 3
	SVG_FECOMPONENTTRANSFER_TYPE_LINEAR   int = 4
	SVG_FECOMPONENTTRANSFER_TYPE_GAMMA    int = 5
)

// Type returning attribute 'type' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGComponentTransferFunctionElement) Type() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("type")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// TableValues returning attribute 'tableValues' with
// type svg.SVGAnimatedNumberList (idl: SVGAnimatedNumberList).
func (_this *SVGComponentTransferFunctionElement) TableValues() *svg.SVGAnimatedNumberList {
	var ret *svg.SVGAnimatedNumberList
	value := _this.Value_JS.Get("tableValues")
	ret = svg.SVGAnimatedNumberListFromJS(value)
	return ret
}

// Slope returning attribute 'slope' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGComponentTransferFunctionElement) Slope() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("slope")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Intercept returning attribute 'intercept' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGComponentTransferFunctionElement) Intercept() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("intercept")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Amplitude returning attribute 'amplitude' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGComponentTransferFunctionElement) Amplitude() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("amplitude")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Exponent returning attribute 'exponent' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGComponentTransferFunctionElement) Exponent() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("exponent")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Offset returning attribute 'offset' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGComponentTransferFunctionElement) Offset() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("offset")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// class: SVGFEBlendElement
type SVGFEBlendElement struct {
	svg.SVGElement
}

// SVGFEBlendElementFromJS is casting a js.Value into SVGFEBlendElement.
func SVGFEBlendElementFromJS(value js.Value) *SVGFEBlendElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEBlendElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEBlendElementFromJS is casting from something that holds a js.Value into SVGFEBlendElement.
func SVGFEBlendElementFromWrapper(input core.Wrapper) *SVGFEBlendElement {
	return SVGFEBlendElementFromJS(input.JSValue())
}

const (
	SVG_FEBLEND_MODE_UNKNOWN     int = 0
	SVG_FEBLEND_MODE_NORMAL      int = 1
	SVG_FEBLEND_MODE_MULTIPLY    int = 2
	SVG_FEBLEND_MODE_SCREEN      int = 3
	SVG_FEBLEND_MODE_DARKEN      int = 4
	SVG_FEBLEND_MODE_LIGHTEN     int = 5
	SVG_FEBLEND_MODE_OVERLAY     int = 6
	SVG_FEBLEND_MODE_COLOR_DODGE int = 7
	SVG_FEBLEND_MODE_COLOR_BURN  int = 8
	SVG_FEBLEND_MODE_HARD_LIGHT  int = 9
	SVG_FEBLEND_MODE_SOFT_LIGHT  int = 10
	SVG_FEBLEND_MODE_DIFFERENCE  int = 11
	SVG_FEBLEND_MODE_EXCLUSION   int = 12
	SVG_FEBLEND_MODE_HUE         int = 13
	SVG_FEBLEND_MODE_SATURATION  int = 14
	SVG_FEBLEND_MODE_COLOR       int = 15
	SVG_FEBLEND_MODE_LUMINOSITY  int = 16
)

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEBlendElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// In2 returning attribute 'in2' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEBlendElement) In2() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in2")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Mode returning attribute 'mode' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFEBlendElement) Mode() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("mode")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEBlendElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEBlendElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEBlendElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEBlendElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEBlendElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEColorMatrixElement
type SVGFEColorMatrixElement struct {
	svg.SVGElement
}

// SVGFEColorMatrixElementFromJS is casting a js.Value into SVGFEColorMatrixElement.
func SVGFEColorMatrixElementFromJS(value js.Value) *SVGFEColorMatrixElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEColorMatrixElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEColorMatrixElementFromJS is casting from something that holds a js.Value into SVGFEColorMatrixElement.
func SVGFEColorMatrixElementFromWrapper(input core.Wrapper) *SVGFEColorMatrixElement {
	return SVGFEColorMatrixElementFromJS(input.JSValue())
}

const (
	SVG_FECOLORMATRIX_TYPE_UNKNOWN          int = 0
	SVG_FECOLORMATRIX_TYPE_MATRIX           int = 1
	SVG_FECOLORMATRIX_TYPE_SATURATE         int = 2
	SVG_FECOLORMATRIX_TYPE_HUEROTATE        int = 3
	SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA int = 4
)

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEColorMatrixElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Type returning attribute 'type' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFEColorMatrixElement) Type() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("type")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// Values returning attribute 'values' with
// type svg.SVGAnimatedNumberList (idl: SVGAnimatedNumberList).
func (_this *SVGFEColorMatrixElement) Values() *svg.SVGAnimatedNumberList {
	var ret *svg.SVGAnimatedNumberList
	value := _this.Value_JS.Get("values")
	ret = svg.SVGAnimatedNumberListFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEColorMatrixElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEColorMatrixElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEColorMatrixElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEColorMatrixElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEColorMatrixElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEComponentTransferElement
type SVGFEComponentTransferElement struct {
	svg.SVGElement
}

// SVGFEComponentTransferElementFromJS is casting a js.Value into SVGFEComponentTransferElement.
func SVGFEComponentTransferElementFromJS(value js.Value) *SVGFEComponentTransferElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEComponentTransferElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEComponentTransferElementFromJS is casting from something that holds a js.Value into SVGFEComponentTransferElement.
func SVGFEComponentTransferElementFromWrapper(input core.Wrapper) *SVGFEComponentTransferElement {
	return SVGFEComponentTransferElementFromJS(input.JSValue())
}

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEComponentTransferElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEComponentTransferElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEComponentTransferElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEComponentTransferElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEComponentTransferElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEComponentTransferElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFECompositeElement
type SVGFECompositeElement struct {
	svg.SVGElement
}

// SVGFECompositeElementFromJS is casting a js.Value into SVGFECompositeElement.
func SVGFECompositeElementFromJS(value js.Value) *SVGFECompositeElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFECompositeElement{}
	ret.Value_JS = value
	return ret
}

// SVGFECompositeElementFromJS is casting from something that holds a js.Value into SVGFECompositeElement.
func SVGFECompositeElementFromWrapper(input core.Wrapper) *SVGFECompositeElement {
	return SVGFECompositeElementFromJS(input.JSValue())
}

const (
	SVG_FECOMPOSITE_OPERATOR_UNKNOWN    int = 0
	SVG_FECOMPOSITE_OPERATOR_OVER       int = 1
	SVG_FECOMPOSITE_OPERATOR_IN         int = 2
	SVG_FECOMPOSITE_OPERATOR_OUT        int = 3
	SVG_FECOMPOSITE_OPERATOR_ATOP       int = 4
	SVG_FECOMPOSITE_OPERATOR_XOR        int = 5
	SVG_FECOMPOSITE_OPERATOR_ARITHMETIC int = 6
)

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFECompositeElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// In2 returning attribute 'in2' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFECompositeElement) In2() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in2")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Operator returning attribute 'operator' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFECompositeElement) Operator() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("operator")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// K1 returning attribute 'k1' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFECompositeElement) K1() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("k1")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// K2 returning attribute 'k2' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFECompositeElement) K2() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("k2")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// K3 returning attribute 'k3' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFECompositeElement) K3() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("k3")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// K4 returning attribute 'k4' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFECompositeElement) K4() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("k4")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFECompositeElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFECompositeElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFECompositeElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFECompositeElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFECompositeElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEConvolveMatrixElement
type SVGFEConvolveMatrixElement struct {
	svg.SVGElement
}

// SVGFEConvolveMatrixElementFromJS is casting a js.Value into SVGFEConvolveMatrixElement.
func SVGFEConvolveMatrixElementFromJS(value js.Value) *SVGFEConvolveMatrixElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEConvolveMatrixElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEConvolveMatrixElementFromJS is casting from something that holds a js.Value into SVGFEConvolveMatrixElement.
func SVGFEConvolveMatrixElementFromWrapper(input core.Wrapper) *SVGFEConvolveMatrixElement {
	return SVGFEConvolveMatrixElementFromJS(input.JSValue())
}

const (
	SVG_EDGEMODE_UNKNOWN_CME   int = 0
	SVG_EDGEMODE_DUPLICATE_CME int = 1
	SVG_EDGEMODE_WRAP_CME      int = 2
	SVG_EDGEMODE_NONE_CME      int = 3
)

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEConvolveMatrixElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// OrderX returning attribute 'orderX' with
// type svg.SVGAnimatedInteger (idl: SVGAnimatedInteger).
func (_this *SVGFEConvolveMatrixElement) OrderX() *svg.SVGAnimatedInteger {
	var ret *svg.SVGAnimatedInteger
	value := _this.Value_JS.Get("orderX")
	ret = svg.SVGAnimatedIntegerFromJS(value)
	return ret
}

// OrderY returning attribute 'orderY' with
// type svg.SVGAnimatedInteger (idl: SVGAnimatedInteger).
func (_this *SVGFEConvolveMatrixElement) OrderY() *svg.SVGAnimatedInteger {
	var ret *svg.SVGAnimatedInteger
	value := _this.Value_JS.Get("orderY")
	ret = svg.SVGAnimatedIntegerFromJS(value)
	return ret
}

// KernelMatrix returning attribute 'kernelMatrix' with
// type svg.SVGAnimatedNumberList (idl: SVGAnimatedNumberList).
func (_this *SVGFEConvolveMatrixElement) KernelMatrix() *svg.SVGAnimatedNumberList {
	var ret *svg.SVGAnimatedNumberList
	value := _this.Value_JS.Get("kernelMatrix")
	ret = svg.SVGAnimatedNumberListFromJS(value)
	return ret
}

// Divisor returning attribute 'divisor' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEConvolveMatrixElement) Divisor() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("divisor")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Bias returning attribute 'bias' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEConvolveMatrixElement) Bias() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("bias")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// TargetX returning attribute 'targetX' with
// type svg.SVGAnimatedInteger (idl: SVGAnimatedInteger).
func (_this *SVGFEConvolveMatrixElement) TargetX() *svg.SVGAnimatedInteger {
	var ret *svg.SVGAnimatedInteger
	value := _this.Value_JS.Get("targetX")
	ret = svg.SVGAnimatedIntegerFromJS(value)
	return ret
}

// TargetY returning attribute 'targetY' with
// type svg.SVGAnimatedInteger (idl: SVGAnimatedInteger).
func (_this *SVGFEConvolveMatrixElement) TargetY() *svg.SVGAnimatedInteger {
	var ret *svg.SVGAnimatedInteger
	value := _this.Value_JS.Get("targetY")
	ret = svg.SVGAnimatedIntegerFromJS(value)
	return ret
}

// EdgeMode returning attribute 'edgeMode' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFEConvolveMatrixElement) EdgeMode() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("edgeMode")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// KernelUnitLengthX returning attribute 'kernelUnitLengthX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEConvolveMatrixElement) KernelUnitLengthX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("kernelUnitLengthX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// KernelUnitLengthY returning attribute 'kernelUnitLengthY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEConvolveMatrixElement) KernelUnitLengthY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("kernelUnitLengthY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// PreserveAlpha returning attribute 'preserveAlpha' with
// type svg.SVGAnimatedBoolean (idl: SVGAnimatedBoolean).
func (_this *SVGFEConvolveMatrixElement) PreserveAlpha() *svg.SVGAnimatedBoolean {
	var ret *svg.SVGAnimatedBoolean
	value := _this.Value_JS.Get("preserveAlpha")
	ret = svg.SVGAnimatedBooleanFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEConvolveMatrixElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEConvolveMatrixElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEConvolveMatrixElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEConvolveMatrixElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEConvolveMatrixElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEDiffuseLightingElement
type SVGFEDiffuseLightingElement struct {
	svg.SVGElement
}

// SVGFEDiffuseLightingElementFromJS is casting a js.Value into SVGFEDiffuseLightingElement.
func SVGFEDiffuseLightingElementFromJS(value js.Value) *SVGFEDiffuseLightingElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEDiffuseLightingElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEDiffuseLightingElementFromJS is casting from something that holds a js.Value into SVGFEDiffuseLightingElement.
func SVGFEDiffuseLightingElementFromWrapper(input core.Wrapper) *SVGFEDiffuseLightingElement {
	return SVGFEDiffuseLightingElementFromJS(input.JSValue())
}

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEDiffuseLightingElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// SurfaceScale returning attribute 'surfaceScale' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDiffuseLightingElement) SurfaceScale() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("surfaceScale")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// DiffuseConstant returning attribute 'diffuseConstant' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDiffuseLightingElement) DiffuseConstant() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("diffuseConstant")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// KernelUnitLengthX returning attribute 'kernelUnitLengthX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDiffuseLightingElement) KernelUnitLengthX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("kernelUnitLengthX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// KernelUnitLengthY returning attribute 'kernelUnitLengthY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDiffuseLightingElement) KernelUnitLengthY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("kernelUnitLengthY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDiffuseLightingElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDiffuseLightingElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDiffuseLightingElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDiffuseLightingElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEDiffuseLightingElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEDisplacementMapElement
type SVGFEDisplacementMapElement struct {
	svg.SVGElement
}

// SVGFEDisplacementMapElementFromJS is casting a js.Value into SVGFEDisplacementMapElement.
func SVGFEDisplacementMapElementFromJS(value js.Value) *SVGFEDisplacementMapElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEDisplacementMapElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEDisplacementMapElementFromJS is casting from something that holds a js.Value into SVGFEDisplacementMapElement.
func SVGFEDisplacementMapElementFromWrapper(input core.Wrapper) *SVGFEDisplacementMapElement {
	return SVGFEDisplacementMapElementFromJS(input.JSValue())
}

const (
	SVG_CHANNEL_UNKNOWN int = 0
	SVG_CHANNEL_R       int = 1
	SVG_CHANNEL_G       int = 2
	SVG_CHANNEL_B       int = 3
	SVG_CHANNEL_A       int = 4
)

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEDisplacementMapElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// In2 returning attribute 'in2' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEDisplacementMapElement) In2() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in2")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Scale returning attribute 'scale' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDisplacementMapElement) Scale() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("scale")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// XChannelSelector returning attribute 'xChannelSelector' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFEDisplacementMapElement) XChannelSelector() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("xChannelSelector")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// YChannelSelector returning attribute 'yChannelSelector' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFEDisplacementMapElement) YChannelSelector() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("yChannelSelector")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDisplacementMapElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDisplacementMapElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDisplacementMapElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDisplacementMapElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEDisplacementMapElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEDistantLightElement
type SVGFEDistantLightElement struct {
	svg.SVGElement
}

// SVGFEDistantLightElementFromJS is casting a js.Value into SVGFEDistantLightElement.
func SVGFEDistantLightElementFromJS(value js.Value) *SVGFEDistantLightElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEDistantLightElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEDistantLightElementFromJS is casting from something that holds a js.Value into SVGFEDistantLightElement.
func SVGFEDistantLightElementFromWrapper(input core.Wrapper) *SVGFEDistantLightElement {
	return SVGFEDistantLightElementFromJS(input.JSValue())
}

// Azimuth returning attribute 'azimuth' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDistantLightElement) Azimuth() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("azimuth")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Elevation returning attribute 'elevation' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDistantLightElement) Elevation() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("elevation")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// class: SVGFEDropShadowElement
type SVGFEDropShadowElement struct {
	svg.SVGElement
}

// SVGFEDropShadowElementFromJS is casting a js.Value into SVGFEDropShadowElement.
func SVGFEDropShadowElementFromJS(value js.Value) *SVGFEDropShadowElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEDropShadowElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEDropShadowElementFromJS is casting from something that holds a js.Value into SVGFEDropShadowElement.
func SVGFEDropShadowElementFromWrapper(input core.Wrapper) *SVGFEDropShadowElement {
	return SVGFEDropShadowElementFromJS(input.JSValue())
}

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEDropShadowElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Dx returning attribute 'dx' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDropShadowElement) Dx() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("dx")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Dy returning attribute 'dy' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDropShadowElement) Dy() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("dy")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// StdDeviationX returning attribute 'stdDeviationX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDropShadowElement) StdDeviationX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("stdDeviationX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// StdDeviationY returning attribute 'stdDeviationY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEDropShadowElement) StdDeviationY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("stdDeviationY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDropShadowElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDropShadowElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDropShadowElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEDropShadowElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEDropShadowElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

func (_this *SVGFEDropShadowElement) SetStdDeviation(stdDeviationX float32, stdDeviationY float32) {
	var (
		_args [2]interface{}
		_end  int
	)
	_p0 := stdDeviationX
	_args[0] = _p0
	_end++
	_p1 := stdDeviationY
	_args[1] = _p1
	_end++
	_this.Value_JS.Call("setStdDeviation", _args[0:_end]...)
	return
}

// class: SVGFEFloodElement
type SVGFEFloodElement struct {
	svg.SVGElement
}

// SVGFEFloodElementFromJS is casting a js.Value into SVGFEFloodElement.
func SVGFEFloodElementFromJS(value js.Value) *SVGFEFloodElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEFloodElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEFloodElementFromJS is casting from something that holds a js.Value into SVGFEFloodElement.
func SVGFEFloodElementFromWrapper(input core.Wrapper) *SVGFEFloodElement {
	return SVGFEFloodElementFromJS(input.JSValue())
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEFloodElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEFloodElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEFloodElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEFloodElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEFloodElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEFuncAElement
type SVGFEFuncAElement struct {
	SVGComponentTransferFunctionElement
}

// SVGFEFuncAElementFromJS is casting a js.Value into SVGFEFuncAElement.
func SVGFEFuncAElementFromJS(value js.Value) *SVGFEFuncAElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEFuncAElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEFuncAElementFromJS is casting from something that holds a js.Value into SVGFEFuncAElement.
func SVGFEFuncAElementFromWrapper(input core.Wrapper) *SVGFEFuncAElement {
	return SVGFEFuncAElementFromJS(input.JSValue())
}

// class: SVGFEFuncBElement
type SVGFEFuncBElement struct {
	SVGComponentTransferFunctionElement
}

// SVGFEFuncBElementFromJS is casting a js.Value into SVGFEFuncBElement.
func SVGFEFuncBElementFromJS(value js.Value) *SVGFEFuncBElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEFuncBElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEFuncBElementFromJS is casting from something that holds a js.Value into SVGFEFuncBElement.
func SVGFEFuncBElementFromWrapper(input core.Wrapper) *SVGFEFuncBElement {
	return SVGFEFuncBElementFromJS(input.JSValue())
}

// class: SVGFEFuncGElement
type SVGFEFuncGElement struct {
	SVGComponentTransferFunctionElement
}

// SVGFEFuncGElementFromJS is casting a js.Value into SVGFEFuncGElement.
func SVGFEFuncGElementFromJS(value js.Value) *SVGFEFuncGElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEFuncGElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEFuncGElementFromJS is casting from something that holds a js.Value into SVGFEFuncGElement.
func SVGFEFuncGElementFromWrapper(input core.Wrapper) *SVGFEFuncGElement {
	return SVGFEFuncGElementFromJS(input.JSValue())
}

// class: SVGFEFuncRElement
type SVGFEFuncRElement struct {
	SVGComponentTransferFunctionElement
}

// SVGFEFuncRElementFromJS is casting a js.Value into SVGFEFuncRElement.
func SVGFEFuncRElementFromJS(value js.Value) *SVGFEFuncRElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEFuncRElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEFuncRElementFromJS is casting from something that holds a js.Value into SVGFEFuncRElement.
func SVGFEFuncRElementFromWrapper(input core.Wrapper) *SVGFEFuncRElement {
	return SVGFEFuncRElementFromJS(input.JSValue())
}

// class: SVGFEGaussianBlurElement
type SVGFEGaussianBlurElement struct {
	svg.SVGElement
}

// SVGFEGaussianBlurElementFromJS is casting a js.Value into SVGFEGaussianBlurElement.
func SVGFEGaussianBlurElementFromJS(value js.Value) *SVGFEGaussianBlurElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEGaussianBlurElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEGaussianBlurElementFromJS is casting from something that holds a js.Value into SVGFEGaussianBlurElement.
func SVGFEGaussianBlurElementFromWrapper(input core.Wrapper) *SVGFEGaussianBlurElement {
	return SVGFEGaussianBlurElementFromJS(input.JSValue())
}

const (
	SVG_EDGEMODE_UNKNOWN_GBE   int = 0
	SVG_EDGEMODE_DUPLICATE_GBE int = 1
	SVG_EDGEMODE_WRAP_GBE      int = 2
	SVG_EDGEMODE_NONE_GBE      int = 3
)

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEGaussianBlurElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// StdDeviationX returning attribute 'stdDeviationX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEGaussianBlurElement) StdDeviationX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("stdDeviationX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// StdDeviationY returning attribute 'stdDeviationY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEGaussianBlurElement) StdDeviationY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("stdDeviationY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// EdgeMode returning attribute 'edgeMode' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFEGaussianBlurElement) EdgeMode() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("edgeMode")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEGaussianBlurElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEGaussianBlurElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEGaussianBlurElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEGaussianBlurElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEGaussianBlurElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

func (_this *SVGFEGaussianBlurElement) SetStdDeviation(stdDeviationX float32, stdDeviationY float32) {
	var (
		_args [2]interface{}
		_end  int
	)
	_p0 := stdDeviationX
	_args[0] = _p0
	_end++
	_p1 := stdDeviationY
	_args[1] = _p1
	_end++
	_this.Value_JS.Call("setStdDeviation", _args[0:_end]...)
	return
}

// class: SVGFEImageElement
type SVGFEImageElement struct {
	svg.SVGElement
}

// SVGFEImageElementFromJS is casting a js.Value into SVGFEImageElement.
func SVGFEImageElementFromJS(value js.Value) *SVGFEImageElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEImageElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEImageElementFromJS is casting from something that holds a js.Value into SVGFEImageElement.
func SVGFEImageElementFromWrapper(input core.Wrapper) *SVGFEImageElement {
	return SVGFEImageElementFromJS(input.JSValue())
}

// PreserveAspectRatio returning attribute 'preserveAspectRatio' with
// type svg.SVGAnimatedPreserveAspectRatio (idl: SVGAnimatedPreserveAspectRatio).
func (_this *SVGFEImageElement) PreserveAspectRatio() *svg.SVGAnimatedPreserveAspectRatio {
	var ret *svg.SVGAnimatedPreserveAspectRatio
	value := _this.Value_JS.Get("preserveAspectRatio")
	ret = svg.SVGAnimatedPreserveAspectRatioFromJS(value)
	return ret
}

// CrossOrigin returning attribute 'crossOrigin' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEImageElement) CrossOrigin() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("crossOrigin")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEImageElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEImageElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEImageElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEImageElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEImageElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Href returning attribute 'href' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEImageElement) Href() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("href")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEMergeElement
type SVGFEMergeElement struct {
	svg.SVGElement
}

// SVGFEMergeElementFromJS is casting a js.Value into SVGFEMergeElement.
func SVGFEMergeElementFromJS(value js.Value) *SVGFEMergeElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEMergeElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEMergeElementFromJS is casting from something that holds a js.Value into SVGFEMergeElement.
func SVGFEMergeElementFromWrapper(input core.Wrapper) *SVGFEMergeElement {
	return SVGFEMergeElementFromJS(input.JSValue())
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMergeElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMergeElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMergeElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMergeElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEMergeElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEMergeNodeElement
type SVGFEMergeNodeElement struct {
	svg.SVGElement
}

// SVGFEMergeNodeElementFromJS is casting a js.Value into SVGFEMergeNodeElement.
func SVGFEMergeNodeElementFromJS(value js.Value) *SVGFEMergeNodeElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEMergeNodeElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEMergeNodeElementFromJS is casting from something that holds a js.Value into SVGFEMergeNodeElement.
func SVGFEMergeNodeElementFromWrapper(input core.Wrapper) *SVGFEMergeNodeElement {
	return SVGFEMergeNodeElementFromJS(input.JSValue())
}

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEMergeNodeElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEMorphologyElement
type SVGFEMorphologyElement struct {
	svg.SVGElement
}

// SVGFEMorphologyElementFromJS is casting a js.Value into SVGFEMorphologyElement.
func SVGFEMorphologyElementFromJS(value js.Value) *SVGFEMorphologyElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEMorphologyElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEMorphologyElementFromJS is casting from something that holds a js.Value into SVGFEMorphologyElement.
func SVGFEMorphologyElementFromWrapper(input core.Wrapper) *SVGFEMorphologyElement {
	return SVGFEMorphologyElementFromJS(input.JSValue())
}

const (
	SVG_MORPHOLOGY_OPERATOR_UNKNOWN int = 0
	SVG_MORPHOLOGY_OPERATOR_ERODE   int = 1
	SVG_MORPHOLOGY_OPERATOR_DILATE  int = 2
)

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEMorphologyElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Operator returning attribute 'operator' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFEMorphologyElement) Operator() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("operator")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// RadiusX returning attribute 'radiusX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEMorphologyElement) RadiusX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("radiusX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// RadiusY returning attribute 'radiusY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEMorphologyElement) RadiusY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("radiusY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMorphologyElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMorphologyElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMorphologyElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEMorphologyElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEMorphologyElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEOffsetElement
type SVGFEOffsetElement struct {
	svg.SVGElement
}

// SVGFEOffsetElementFromJS is casting a js.Value into SVGFEOffsetElement.
func SVGFEOffsetElementFromJS(value js.Value) *SVGFEOffsetElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEOffsetElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEOffsetElementFromJS is casting from something that holds a js.Value into SVGFEOffsetElement.
func SVGFEOffsetElementFromWrapper(input core.Wrapper) *SVGFEOffsetElement {
	return SVGFEOffsetElementFromJS(input.JSValue())
}

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEOffsetElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// Dx returning attribute 'dx' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEOffsetElement) Dx() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("dx")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Dy returning attribute 'dy' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEOffsetElement) Dy() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("dy")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEOffsetElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEOffsetElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEOffsetElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFEOffsetElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFEOffsetElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFEPointLightElement
type SVGFEPointLightElement struct {
	svg.SVGElement
}

// SVGFEPointLightElementFromJS is casting a js.Value into SVGFEPointLightElement.
func SVGFEPointLightElementFromJS(value js.Value) *SVGFEPointLightElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFEPointLightElement{}
	ret.Value_JS = value
	return ret
}

// SVGFEPointLightElementFromJS is casting from something that holds a js.Value into SVGFEPointLightElement.
func SVGFEPointLightElementFromWrapper(input core.Wrapper) *SVGFEPointLightElement {
	return SVGFEPointLightElementFromJS(input.JSValue())
}

// X returning attribute 'x' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEPointLightElement) X() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEPointLightElement) Y() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Z returning attribute 'z' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFEPointLightElement) Z() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("z")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// class: SVGFESpecularLightingElement
type SVGFESpecularLightingElement struct {
	svg.SVGElement
}

// SVGFESpecularLightingElementFromJS is casting a js.Value into SVGFESpecularLightingElement.
func SVGFESpecularLightingElementFromJS(value js.Value) *SVGFESpecularLightingElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFESpecularLightingElement{}
	ret.Value_JS = value
	return ret
}

// SVGFESpecularLightingElementFromJS is casting from something that holds a js.Value into SVGFESpecularLightingElement.
func SVGFESpecularLightingElementFromWrapper(input core.Wrapper) *SVGFESpecularLightingElement {
	return SVGFESpecularLightingElementFromJS(input.JSValue())
}

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFESpecularLightingElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// SurfaceScale returning attribute 'surfaceScale' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpecularLightingElement) SurfaceScale() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("surfaceScale")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// SpecularConstant returning attribute 'specularConstant' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpecularLightingElement) SpecularConstant() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("specularConstant")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// SpecularExponent returning attribute 'specularExponent' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpecularLightingElement) SpecularExponent() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("specularExponent")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// KernelUnitLengthX returning attribute 'kernelUnitLengthX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpecularLightingElement) KernelUnitLengthX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("kernelUnitLengthX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// KernelUnitLengthY returning attribute 'kernelUnitLengthY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpecularLightingElement) KernelUnitLengthY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("kernelUnitLengthY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFESpecularLightingElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFESpecularLightingElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFESpecularLightingElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFESpecularLightingElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFESpecularLightingElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFESpotLightElement
type SVGFESpotLightElement struct {
	svg.SVGElement
}

// SVGFESpotLightElementFromJS is casting a js.Value into SVGFESpotLightElement.
func SVGFESpotLightElementFromJS(value js.Value) *SVGFESpotLightElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFESpotLightElement{}
	ret.Value_JS = value
	return ret
}

// SVGFESpotLightElementFromJS is casting from something that holds a js.Value into SVGFESpotLightElement.
func SVGFESpotLightElementFromWrapper(input core.Wrapper) *SVGFESpotLightElement {
	return SVGFESpotLightElementFromJS(input.JSValue())
}

// X returning attribute 'x' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) X() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) Y() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// Z returning attribute 'z' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) Z() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("z")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// PointsAtX returning attribute 'pointsAtX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) PointsAtX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("pointsAtX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// PointsAtY returning attribute 'pointsAtY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) PointsAtY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("pointsAtY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// PointsAtZ returning attribute 'pointsAtZ' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) PointsAtZ() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("pointsAtZ")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// SpecularExponent returning attribute 'specularExponent' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) SpecularExponent() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("specularExponent")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// LimitingConeAngle returning attribute 'limitingConeAngle' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFESpotLightElement) LimitingConeAngle() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("limitingConeAngle")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// class: SVGFETileElement
type SVGFETileElement struct {
	svg.SVGElement
}

// SVGFETileElementFromJS is casting a js.Value into SVGFETileElement.
func SVGFETileElementFromJS(value js.Value) *SVGFETileElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFETileElement{}
	ret.Value_JS = value
	return ret
}

// SVGFETileElementFromJS is casting from something that holds a js.Value into SVGFETileElement.
func SVGFETileElementFromWrapper(input core.Wrapper) *SVGFETileElement {
	return SVGFETileElementFromJS(input.JSValue())
}

// In1 returning attribute 'in1' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFETileElement) In1() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("in1")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETileElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETileElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETileElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETileElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFETileElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFETurbulenceElement
type SVGFETurbulenceElement struct {
	svg.SVGElement
}

// SVGFETurbulenceElementFromJS is casting a js.Value into SVGFETurbulenceElement.
func SVGFETurbulenceElementFromJS(value js.Value) *SVGFETurbulenceElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFETurbulenceElement{}
	ret.Value_JS = value
	return ret
}

// SVGFETurbulenceElementFromJS is casting from something that holds a js.Value into SVGFETurbulenceElement.
func SVGFETurbulenceElementFromWrapper(input core.Wrapper) *SVGFETurbulenceElement {
	return SVGFETurbulenceElementFromJS(input.JSValue())
}

const (
	SVG_TURBULENCE_TYPE_UNKNOWN      int = 0
	SVG_TURBULENCE_TYPE_FRACTALNOISE int = 1
	SVG_TURBULENCE_TYPE_TURBULENCE   int = 2
	SVG_STITCHTYPE_UNKNOWN           int = 0
	SVG_STITCHTYPE_STITCH            int = 1
	SVG_STITCHTYPE_NOSTITCH          int = 2
)

// BaseFrequencyX returning attribute 'baseFrequencyX' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFETurbulenceElement) BaseFrequencyX() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("baseFrequencyX")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// BaseFrequencyY returning attribute 'baseFrequencyY' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFETurbulenceElement) BaseFrequencyY() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("baseFrequencyY")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// NumOctaves returning attribute 'numOctaves' with
// type svg.SVGAnimatedInteger (idl: SVGAnimatedInteger).
func (_this *SVGFETurbulenceElement) NumOctaves() *svg.SVGAnimatedInteger {
	var ret *svg.SVGAnimatedInteger
	value := _this.Value_JS.Get("numOctaves")
	ret = svg.SVGAnimatedIntegerFromJS(value)
	return ret
}

// Seed returning attribute 'seed' with
// type svg.SVGAnimatedNumber (idl: SVGAnimatedNumber).
func (_this *SVGFETurbulenceElement) Seed() *svg.SVGAnimatedNumber {
	var ret *svg.SVGAnimatedNumber
	value := _this.Value_JS.Get("seed")
	ret = svg.SVGAnimatedNumberFromJS(value)
	return ret
}

// StitchTiles returning attribute 'stitchTiles' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFETurbulenceElement) StitchTiles() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("stitchTiles")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// Type returning attribute 'type' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFETurbulenceElement) Type() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("type")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETurbulenceElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETurbulenceElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETurbulenceElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFETurbulenceElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Result returning attribute 'result' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFETurbulenceElement) Result() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("result")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}

// class: SVGFilterElement
type SVGFilterElement struct {
	svg.SVGElement
}

// SVGFilterElementFromJS is casting a js.Value into SVGFilterElement.
func SVGFilterElementFromJS(value js.Value) *SVGFilterElement {
	if typ := value.Type(); typ == js.TypeNull || typ == js.TypeUndefined {
		return nil
	}
	ret := &SVGFilterElement{}
	ret.Value_JS = value
	return ret
}

// SVGFilterElementFromJS is casting from something that holds a js.Value into SVGFilterElement.
func SVGFilterElementFromWrapper(input core.Wrapper) *SVGFilterElement {
	return SVGFilterElementFromJS(input.JSValue())
}

// FilterUnits returning attribute 'filterUnits' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFilterElement) FilterUnits() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("filterUnits")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// PrimitiveUnits returning attribute 'primitiveUnits' with
// type svg.SVGAnimatedEnumeration (idl: SVGAnimatedEnumeration).
func (_this *SVGFilterElement) PrimitiveUnits() *svg.SVGAnimatedEnumeration {
	var ret *svg.SVGAnimatedEnumeration
	value := _this.Value_JS.Get("primitiveUnits")
	ret = svg.SVGAnimatedEnumerationFromJS(value)
	return ret
}

// X returning attribute 'x' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFilterElement) X() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("x")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Y returning attribute 'y' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFilterElement) Y() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("y")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Width returning attribute 'width' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFilterElement) Width() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("width")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Height returning attribute 'height' with
// type svg.SVGAnimatedLength (idl: SVGAnimatedLength).
func (_this *SVGFilterElement) Height() *svg.SVGAnimatedLength {
	var ret *svg.SVGAnimatedLength
	value := _this.Value_JS.Get("height")
	ret = svg.SVGAnimatedLengthFromJS(value)
	return ret
}

// Href returning attribute 'href' with
// type svg.SVGAnimatedString (idl: SVGAnimatedString).
func (_this *SVGFilterElement) Href() *svg.SVGAnimatedString {
	var ret *svg.SVGAnimatedString
	value := _this.Value_JS.Get("href")
	ret = svg.SVGAnimatedStringFromJS(value)
	return ret
}
